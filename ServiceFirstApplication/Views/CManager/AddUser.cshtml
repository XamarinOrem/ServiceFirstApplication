@using ServiceFirstApplication.Models
@model ServiceFirst_UserLogin
@{
    ViewBag.Title = ViewBag.TitleText;
    Layout = "~/Views/Shared/_LayoutCManager.cshtml";
}

<div class="side-body cstm-side-body">
    <div class="side-body-after">
        <div class="row">
            <div class="col-md-12">
                <div class="form-add-company">
                    <h3 class="a_heading">@ViewBag.TitleText </h3>
             @using (Html.BeginForm("AddUser", "CManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
             {
                 if (ViewBag.Message != null)
                 {
                    <div class="alert alert-success">
                        <strong>@ViewBag.Message</strong>
                    </div>
                 }
                <input type="hidden" value="@ViewBag.UserId" name="ServiceFirstUserID" id="ServiceFirstUserID" />

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="">FirstName</label>
                                @Html.TextBoxFor(x => x.ServiceFirstUserFirstName,
new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserFirstName, "", new { @class = "form-control-file text-danger" })



                            </div>
                            <div class="form-group col-md-6">
                                <label for="">LastName </label>

                                @Html.TextBoxFor(x => x.ServiceFirstUserLastName,
new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserLastName, "", new { @class = "form-control-file text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="">Image</label>
                                <input type="file" class="form-control-file" id="file" name="file">
                            </div>
                            <div class="form-group col-md-6">
                                <label for="">UserName</label>
                                @Html.TextBoxFor(x => x.ServiceFirstUserName,
new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserName, "", new { @class = "form-control-file text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for=""> Password </label>

                                @if (Model != null)
                                {
                                    if (Model.ServiceFirstUserPassword != null)
                                    {
                                        @Html.PasswordFor(x => x.ServiceFirstUserPassword,
         new { @class = "form-control", @id = "password", @value = Model.ServiceFirstUserPassword })
                                    }
                                }
                                else
                                {
                                    @Html.PasswordFor(x => x.ServiceFirstUserPassword,
         new { @class = "form-control", @id = "password" })
                                }
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserPassword, "", new { @class = "form-control-file text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                <label for="exampleInputFile"> Confirm Password </label>




                                @if (Model != null)
                                {
                                    if (Model.ServiceFirstUserPassword != null)
                                    {
                                        @Html.PasswordFor(x => x.ServiceFirstUserConfirmPassword,
         new { @class = "form-control", @id = "password", @value = Model.ServiceFirstUserPassword })
                                    }
                                }
                                else
                                {
                                    @Html.PasswordFor(x => x.ServiceFirstUserConfirmPassword,
         new { @class = "form-control", @id = "password" })
                                }
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserConfirmPassword, "", new { @class = "form-control-file text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="">Contact Number</label>
                                @Html.TextBoxFor(x => x.ServiceFirstUserContactNumber,
new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserContactNumber, "", new { @class = "form-control-file text-danger" })
                            </div>
                            <div class="form-group col-md-6">
                                <label for=""> Contact Email</label>
                                @Html.TextBoxFor(x => x.ServiceFirstUserContactEmail,
new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserContactEmail, "", new { @class = "form-control-file text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label for="">Contact Title</label>
                                @Html.TextBoxFor(x => x.ServiceFirstUserContactTitle,
new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserContactTitle, "", new { @class = "form-control-file text-danger" })
                            </div>

                            <div class="form-group col-md-6">
                                <label for="exampleInputFile">Choose User Group</label>
                                @Html.DropDownListFor(x => x.ServiceFirstUserGroupID, ViewBag.UserGroups as SelectList, "Select User Groups", new { @class = "form-control-file", id = "ServiceFirstGroupID" })
                                @Html.ValidationMessageFor(x => x.ServiceFirstUserGroupID, "", new { @class = "text-danger" })
                            </div>
                           
                        </div>

                        <div class="can_sub">
                            <button type="button" class="btn btn-primary" id="btnCancel">Cancel</button>
                            <button type="submit" class="btn btn-primary sub">Submit</button>
                        </div>
             }
                </div>
            </div>
        </div>
    </div>
</div>



@section scripts{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnCancel').click(function () {
                window.location.href = '@Url.Action("ListUsers")';
            });
        });
    </script>
}